#!/bin/sh
# shellcheck disable=1090,1091

# Shared code between boot/shutdown.
. /usr/lib/init/rc.lib

log "Loading rc.conf settings..."; {
    [ -f /etc/rc.conf ] && . /etc/rc.conf
}

log "Running shutdown pre hooks..."; {
    for file in /etc/rc.d/*.pre.shutdown; do
        [ -f "$file" ] && . "$file"
    done
}

log "Waiting for services to stop..."; {
    sv -w196 force-stop /var/service/*
    sv exit /var/service/*
} >/dev/null 2>&1

log "Saving random seed..."; {
    random_seed save
}

log "Sending TERM signal to all processes..."; {
    kall 15
    sleep 2
}

log "Sending KILL signal to all processes..."; {
    kall 9
    sleep 1
}

log "Unmounting filesystems and disabling swap..."; {
    swapoff -a

    # Skip unmounting pseudo filesystems as they may be
    # needed below for encryption and user shutdown scripts.
    #
    # The '-t' flag is a part of the LSB standard and is
    # supported by busybox, toybox, util-linux, FreeBSD,
    # NetBSD, OpenBSD and others.
    #
    # This flag is unsupported by ubase and I consider this
    # a ubase issue. ubase only supports Linux and this
    # flag is a part of the Linux standard base.
    umount -rat nosysfs,noproc,nodevtmpfs,notmpfs
}

log "Remounting rootfs read-only..."; {
    mount -o remount,ro /
    sync
}

log "Deactivating LVM devices (if any exist)..."; {
    [ -x /bin/lvm ] && trigger_lvm shutdown
}

log "Deactivating dm-crypt devices (if any exist)..."; {
    [ -x /bin/cryptsetup ] && {
        for file in /sys/block/*/dm/uuid; do
            while read -r uuid; do
                [ -e "/dev/mapper/${uuid#CRYPT-*-*-}" ] ||
                    continue

                cryptsetup close --deferred "${uuid#CRYPT-*-*-}"
            done < "$file"
        done
    }

    log "Deactivating LVM devices for dm-crypt (if any exist)..."; {
        [ -x /bin/lvm ] && trigger_lvm shutdown
    }
}

log "Running shutdown post hooks..."; {
    for file in /etc/rc.d/*.post.shutdown; do
        [ -f "$file" ] && . "$file"
    done
}

# Run 'kpow' to signal to the kernel that we want to reboot or
# poweroff the system. These will only run when '$1' contains
# a valid action. When busybox init is used, this code is
# ignored entirely as it handles this itself.
case $1 in
    reboot)   kpow r ;;
    poweroff) kpow p ;;
esac
